{"name":"Node-config-ngscenario-dsl","tagline":"A simple angular-scenario DSL for configuring a node.js backend directly from your E2E tests","body":"## Introduction\r\n\r\nA simple angular-scenario DSL for configuring a node.js backend directly from your e2e-tests. \r\n\r\nIt consists of two parts: \r\n\r\n1. A node module providing an HTTP-based API for remote server configuration.\r\n2. An angular-scenario DSL providing a convenient client interface to the HTTP-based API.\r\n\r\n## Features\r\n\r\n- Configure node backend-request behavior from your e2e tests\r\n- Easy-to-use angular-scenario DSL\r\n- Integrates nicely with existing express server configurations\r\n\r\n## Getting Started\r\n\r\n### Server\r\n\r\n#### Install the node module\r\n\r\n```\r\nnpm install node-config-ngscenario-dsl\r\n```\r\n\r\n#### Use it in your server config\r\n\r\n```\r\n/*\r\n * Setup your express app\r\n */\r\nvar express = require('express');\r\nvar app = express();\r\napp.use(express.bodyParser()); // <- important\r\n\r\n/*\r\n * Register the node-config-scenario-dsl express handlers\r\n */\r\nrequire('node-config-ngscenario-dsl').setup(app);\r\n\r\n/*\r\n * Expose the express app\r\n */\r\nvar http = require('http');\r\nvar server = http.createServer(app);\r\nserver.listen(2888);\r\n```\r\n\r\n### Client\r\n\r\nInclude [node-config-ngscenario-dsl.js](https://github.com/hypoport/node-config-ngscenario-dsl/blob/master/client-src/node-config-ngscenario-dsl.js) and [jQuery](http://jquery.com) in your e2e-tests.\r\n\r\nThen start using the DSL in your e2e-tests:\r\n\r\n```\r\n// Configure GET requests to url /dummyRequest to respond with status code 500\r\nserver().onRequest({ method: 'GET', url: \"/dummyRequest\" }).respondWith(500);\r\n\r\n// run some tests...\r\n\r\n// Clear the above request handler\r\nserver().clear();\r\n\r\n```\r\n\r\n## Contributing\r\n\r\n* Check for [open issues](https://github.com/hypoport/node-config-ngscenario-dsl/issues) or [open a fresh issue](https://github.com/hypoport/node-config-ngscenario-dsl/issues/new) to start a discussion around a feature idea or a bug.\r\n* There is a Contributor Friendly tag for issues that should be ideal for people who are not very familiar with the codebase yet.\r\n* Fork the repository on Github to start making your changes.\r\n* Write some tests which show that the bug was fixed or that the feature works as expected.\r\n* Send a pull request and bug the maintainer until it gets merged and published. :)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}